buildscript {
    ext {
        springBootVersion = "2.7.0"
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath "org.yaml:snakeyaml:1.29"
        classpath "com.netflix.nebula:gradle-ospackage-plugin:8.5.6"
    }
}

apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "nebula.ospackage"

task swaggergen() {
    outputs.upToDateWhen { false }
    doFirst {
        tasks.integrationTest.configure {
            systemProperty("--tests", "com.example.ants.test.controller.GenerateSwaggerIT")
        }
    }
    finalizedBy("integrationTest")
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

/* =====================
  variables
===================== */

ext {
    date = new Date()
    timestamp = date.format("yyyyMMddHHmmsss")

    // directory
    baseDirectory = projectDir.absolutePath.replaceAll("\\\\", "/")
    resourcesDirectory = "src/main/resources"
    javaDirectory = "src/main/java"
    propertyDirectory = "${rootProject.rootDir.path}/${resourcesDirectory}"

    // yml
    basePropertyFile = "application.yml"
    environment = System.getProperty("spring.profiles.active") ?: "sample"
    extensionPropertyFile = "application-${environment}.yml"

    // property
    baseProperties = new org.yaml.snakeyaml.Yaml().load(new File("${propertyDirectory}/${basePropertyFile}").newInputStream())
    extensionProperties = new org.yaml.snakeyaml.Yaml().load(new File("${propertyDirectory}/${extensionPropertyFile}").newInputStream())
    baseSpringProperty = baseProperties.spring
    extensionSpringProperty = extensionProperties.spring
    baseAppProperty = baseProperties.app
    extensionAppProperty = extensionProperties.app

    /* =====================
    value
    ===================== */

    // application
    applicationName = baseSpringProperty.application.name
    applicationVersion = "ver.${baseSpringProperty.application.version}"
    packageName = baseAppProperty.package
    mainPackage = "${packageName}.${baseAppProperty.mainClass}"
    buildVersion = "${applicationVersion}_${timestamp}"
}

dependencies {

    ext {
        swaggerVersion = "2.9.2"
    }
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    modules {
        module('org.springframework.boot:spring-boot-starter-logging') {
            replacedBy 'org.springframework.boot:spring-boot-starter-log4j2'
        }
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.apache.logging.log4j') {
                details.useVersion '2.17.1'
            }
        }
    }

    // lombok
    implementation "org.projectlombok:lombok:1.18.20"
    annotationProcessor "org.projectlombok:lombok:1.18.20"
    implementation "org.projectlombok:lombok:1.18.20"

    // yaml-resource-bundle
    implementation('net.rakugakibox.util:yaml-resource-bundle:1.1')

    // swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    implementation "io.springfox:springfox-core:${swaggerVersion}"

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Mockito
    testImplementation "org.mockito:mockito-core:3.10.0"
    testImplementation "org.mockito:mockito-inline:3.10.0"
    testImplementation "org.mockito:mockito-junit-jupiter:3.10.0"
    testImplementation "com.ninja-squad:DbSetup:2.1.0"

    testImplementation "org.jacoco:org.jacoco.agent:0.8.6"


    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation "org.apache.commons:commons-collections4:4.4"

    // webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "io.projectreactor:reactor-core"

    implementation 'commons-io:commons-io:2.4'


}

apply from: "run.gradle"
//apply from: "test.gradle"
